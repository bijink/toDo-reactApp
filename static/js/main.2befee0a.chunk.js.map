{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","useState","toDo","setToDo","saved","localStorage","getItem","JSON","parse","toDos","setToDos","index","findIndex","obj","statusRemove","splice","day","Date","getDay","currDate","hours","getHours","AMorPM","hour","toDoDate","getDate","getMonth","getFullYear","toDoDay","toDoTimeDateDay","getMinutes","getSeconds","useEffect","setItem","stringify","className","onSubmit","e","preventDefault","id","now","text","toDoTime","statusErase","statusDone","statusDrop","statusRetrieve","value","onChange","target","type","placeholder","onClick","title","style","border","outline","backgroundColor","map","window","confirm","filter","obj2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2befee0a.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n   const [toDo, setToDo] = useState('');\n   const [toDos, setToDos] = useState(() => {\n      // getting stored toDos data from localStorage\n      const saved = localStorage.getItem(\"Storage\");\n      const initialValue = JSON.parse(saved);\n      return (initialValue || \"\");\n   });\n\n   //Program to removing correspondend toDos data from localStorage of browser\n   const index = toDos && toDos.findIndex(obj => obj.statusRemove == true);\n   // console.log(index);\n   if (index > -1) toDos && toDos.splice((index), 1);\n\n\n   const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n   const date = new Date();\n   const day = dayNames[date.getDay()];\n\n   const dayNamesShort = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n   const currDate = new Date();\n   const hours = currDate.getHours();\n   const AMorPM = hours >= 12 ? 'PM' : 'AM';\n   var hour = hours % 12;\n   const hour12 = () => {\n      if (hour === 0) hour = 12;\n      return hour;\n   };\n   const toDoDate = currDate.getDate() + '.' + (currDate.getMonth() + 1) + '.' + currDate.getFullYear();\n   const toDoDay = dayNamesShort[currDate.getDay()];\n   const toDoTime = hour12() + ':' + currDate.getMinutes() + ':' + currDate.getSeconds() + ' ' + AMorPM;\n   const toDoTimeDateDay = toDoTime + ' ' + toDoDay + ' ' + toDoDate;\n\n   const handleUserInput = (e) => {\n      setToDo(e.target.value);\n   };\n\n   const handleInputSubmit = (e) => {\n      e.preventDefault();\n      if (toDo) {\n         setToDos([...toDos, {\n            id: Date.now(),\n            text: toDo,\n            toDoTime: toDoTimeDateDay,\n            statusErase: false,\n            statusDone: false,\n            statusDrop: false,\n            statusRetrieve: false,\n            statusRemove: false\n         }]);\n         setToDo('');\n      }\n   };\n   const resetInputField = () => {\n      setToDo('');\n   };\n\n   useEffect(() => {\n      // storing toDos data to localStorage of browser\n      localStorage.setItem(\"Storage\", JSON.stringify(toDos));\n   }, [toDos]);\n\n   return (\n      <div className=\"app\">\n\n         <div className=\"headings\">\n            <div className=\"mainHeading\">\n               <h1 className=\"gradient-text\">ToDo List</h1>\n            </div>\n            <div className=\"subHeading\">\n               <h2 className=\"gradient-text2\">Hey, it's {day}</h2>\n            </div>\n         </div>\n\n         <form onSubmit={handleInputSubmit}>\n            <div className=\"toDoInput\">\n               <div className=\"left\">\n                  <input value={toDo} onChange={handleUserInput} type=\"text\" placeholder=\" Plan Something . . .\" />\n               </div>\n               <div className=\"right erase\">\n                  <i onClick={resetInputField} className=\"fas fa-eraser\" title=\"Clear\"></i>\n               </div>\n               <div className=\"rightEnd  add\">\n                  <button style={{ border: 'none', outline: 'none', backgroundColor: '#fff' }} type=\"submit\"><i className=\"fas fa-plus\" title=\"Add\"></i></button>\n               </div>\n            </div>\n         </form>\n\n         <div className=\"container done\">\n            <h3>Done</h3>\n            {\n               toDos && toDos.map((obj) => {\n                  if (obj.statusDone && !obj.statusRemove) {\n                     return (\n                        <div key={obj.id} className=\"toDo\">\n                           <div className=\"left\"></div>\n                           <div className=\"top\">\n                              <p className=\"textCross\">{obj.text}</p>\n                           </div>\n                           <div className=\"bottom\">\n                              <p>{obj.toDoTime}</p>\n                           </div>\n                           <div className=\"right bin\">\n                              <i onClick={(e) => {\n                                 let isdelete = window.confirm(\"Deleting ToDo permanently !\");\n                                 if (isdelete) {\n                                    e.target.value = true;\n                                 }\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusRemove = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusRemove} className=\"fas fa-trash-alt\" title=\"Remove\"></i>\n                           </div>\n                        </div>\n                     );\n                  }\n               })\n            }\n         </div>\n\n         <div className=\"container onGoing\">\n            <h3>On Going</h3>\n            {\n               toDos && toDos.map((obj) => {\n                  if (!obj.statusDone && !obj.statusDrop) {\n                     return (\n                        <div key={obj.id} className=\"toDo\">\n                           <div className=\"left tick\">\n                              <i onClick={(e) => {\n                                 e.target.value = true;\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusDone = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusDone} className=\"fas fa-check\" title=\"Done\"></i>\n                           </div>\n                           <div className=\"top\">\n                              <p>{obj.text}</p>\n                           </div>\n                           <div className=\"bottom\">\n                              <p>{obj.toDoTime}</p>\n                           </div>\n                           <div className=\"right close\">\n                              <i onClick={(e) => {\n                                 e.target.value = true;\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusDrop = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusDrop} className=\"fas fa-times\" title=\"Drop\"></i>\n                           </div>\n                        </div>\n                     );\n                  } else if (obj.statusRetrieve && !obj.statusDone) {\n                     return (\n                        <div key={obj.id} className=\"toDo\">\n                           <div className=\"left tick\">\n                              <i onClick={(e) => {\n                                 e.target.value = true;\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusDone = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusDone} className=\"fas fa-check\" title=\"Done\"></i>\n                           </div>\n                           <div className=\"top\">\n                              <p>{obj.text}</p>\n                           </div>\n                           <div className=\"bottom\">\n                              <p>{obj.toDoTime}</p>\n                           </div>\n                           <div className=\"right close\">\n                              <i onClick={(e) => {\n\n                                 e.target.value = true;\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusDrop = e.target.value;\n                                       obj.statusRetrieve = !e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusDrop} className=\"fas fa-times\" title=\"Drop\"></i>\n                           </div>\n                        </div>\n                     );\n                  }\n               })\n            }\n         </div>\n\n         <div className=\"container dropped\">\n            <h3>Dropped</h3>\n            {\n               toDos && toDos.map((obj) => {\n                  if (obj.statusDrop && !obj.statusRetrieve && !obj.statusRemove) {\n                     return (\n                        <div key={obj.id} className=\"toDo\">\n                           <div className=\"left recycle\">\n                              <i onClick={(e) => {\n                                 let isdelete = window.confirm(\"Retrieving dropped ToDo\");\n                                 if (isdelete) {\n                                    e.target.value = true;\n                                 }\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusRetrieve = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusRetrieve} className=\"fas fa-redo-alt\" title=\"Retrieve\"></i>\n                           </div>\n                           <div className=\"top\">\n                              <p className=\"textCross\">{obj.text}</p>\n                           </div>\n                           <div className=\"bottom\">\n                              <p>{obj.toDoTime}</p>\n                           </div>\n                           <div className=\"right bin\">\n                              <i onClick={(e) => {\n                                 let isdelete = window.confirm(\"Deleting ToDo permanently !\");\n                                 if (isdelete) {\n                                    e.target.value = true;\n                                 }\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusRemove = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusRemove} className=\"fas fa-trash-alt\" title=\"Remove\"></i>\n                           </div>\n                        </div>\n                     );\n                  }\n               })\n            }\n         </div>\n\n      </div>\n   );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);"],"sourceRoot":""}