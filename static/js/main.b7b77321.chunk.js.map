{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","useState","toDo","setToDo","saved","localStorage","getItem","JSON","parse","toDos","setToDos","index","findIndex","obj","statusRemove","splice","day","Date","getDay","currDate","hours","getHours","AMorPM","hour","toDoDate","getDate","getMonth","getFullYear","toDoDay","toDoTimeDateDay","getMinutes","getSeconds","useEffect","setItem","stringify","className","href","class","title","onSubmit","e","preventDefault","id","now","text","toDoTime","statusErase","statusDone","statusDrop","statusRetrieve","value","onChange","target","type","placeholder","onClick","style","border","outline","backgroundColor","map","window","confirm","filter","obj2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7b77321.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n\n   const [toDo, setToDo] = useState('');\n   const [toDos, setToDos] = useState(() => {\n      // getting stored toDos data from localStorage\n      const saved = localStorage.getItem(\"Storage\");\n      const initialValue = JSON.parse(saved);\n      return (initialValue || \"\");\n   });\n\n   //Program to removing correspondend toDos data from localStorage of browser\n   const index = toDos && toDos.findIndex(obj => obj.statusRemove == true);\n   // console.log(index);\n   if (index > -1) toDos && toDos.splice((index), 1);\n\n\n   const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n   const date = new Date();\n   const day = dayNames[date.getDay()];\n\n   const dayNamesShort = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n   const currDate = new Date();\n   const hours = currDate.getHours();\n   const AMorPM = hours >= 12 ? 'PM' : 'AM';\n   var hour = hours % 12;\n   const hour12 = () => {\n      if (hour === 0) hour = 12;\n      return hour;\n   };\n   const toDoDate = currDate.getDate() + '.' + (currDate.getMonth() + 1) + '.' + currDate.getFullYear();\n   const toDoDay = dayNamesShort[currDate.getDay()];\n   const toDoTime = hour12() + ':' + currDate.getMinutes() + ':' + currDate.getSeconds() + ' ' + AMorPM;\n   const toDoTimeDateDay = toDoTime + ' ' + toDoDay + ' ' + toDoDate;\n\n   const handleUserInput = (e) => {\n      setToDo(e.target.value);\n   };\n\n   const handleInputSubmit = (e) => {\n      e.preventDefault();\n      if (toDo) {\n         setToDos([...toDos, {\n            id: Date.now(),\n            text: toDo,\n            toDoTime: toDoTimeDateDay,\n            statusErase: false,\n            statusDone: false,\n            statusDrop: false,\n            statusRetrieve: false,\n            statusRemove: false\n         }]);\n         setToDo('');\n      }\n   };\n   const resetInputField = () => {\n      setToDo('');\n   };\n\n   useEffect(() => {\n      // storing toDos data to localStorage of browser\n      localStorage.setItem(\"Storage\", JSON.stringify(toDos));\n   }, [toDos]);\n\n   return (\n      <div className=\"app\">\n         <div className='appUpdateLogoContainer' >\n            <a href=\"https://todo-list-react-web.netlify.app\">\n               <i class=\"fas fa-sync-alt\" title='Update'></i>\n            </a>\n         </div>\n\n         <div className=\"headings\">\n            <div className=\"mainHeading\">\n               <h1 className=\"gradient-text\">ToDo List</h1>\n            </div>\n            <div className=\"subHeading\">\n               <h2 className=\"gradient-text2\">Hey, it's {day}</h2>\n            </div>\n         </div>\n\n         <form onSubmit={handleInputSubmit}>\n            <div className=\"toDoInput\">\n               <div className=\"left\">\n                  <input value={toDo} onChange={handleUserInput} type=\"text\" placeholder=\" Plan Something . . .\" />\n               </div>\n               <div className=\"right erase\">\n                  <i onClick={resetInputField} className=\"fas fa-eraser\" title=\"Clear\"></i>\n               </div>\n               <div className=\"rightEnd  add\">\n                  <button style={{ border: 'none', outline: 'none', backgroundColor: '#fff' }} type=\"submit\"><i className=\"fas fa-plus\" title=\"Add\"></i></button>\n               </div>\n            </div>\n         </form>\n\n         <div className=\"container done\">\n            <h3>Done</h3>\n            {\n               toDos && toDos.map((obj) => {\n                  if (obj.statusDone && !obj.statusRemove) {\n                     return (\n                        <div key={obj.id} className=\"toDo\">\n                           <div className=\"left\"></div>\n                           <div className=\"top\">\n                              <p className=\"textCross\">{obj.text}</p>\n                           </div>\n                           <div className=\"bottom\">\n                              <p>{obj.toDoTime}</p>\n                           </div>\n                           <div className=\"right bin\">\n                              <i onClick={(e) => {\n                                 let isdelete = window.confirm(\"Deleting ToDo permanently !\");\n                                 if (isdelete) {\n                                    e.target.value = true;\n                                 }\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusRemove = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusRemove} className=\"fas fa-trash-alt\" title=\"Remove\"></i>\n                           </div>\n                        </div>\n                     );\n                  }\n               })\n            }\n         </div>\n\n         <div className=\"container onGoing\">\n            <h3>On Going</h3>\n            {\n               toDos && toDos.map((obj) => {\n                  if (!obj.statusDone && !obj.statusDrop) {\n                     return (\n                        <div key={obj.id} className=\"toDo\">\n                           <div className=\"left tick\">\n                              <i onClick={(e) => {\n                                 e.target.value = true;\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusDone = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusDone} className=\"fas fa-check\" title=\"Done\"></i>\n                           </div>\n                           <div className=\"top\">\n                              <p>{obj.text}</p>\n                           </div>\n                           <div className=\"bottom\">\n                              <p>{obj.toDoTime}</p>\n                           </div>\n                           <div className=\"right close\">\n                              <i onClick={(e) => {\n                                 e.target.value = true;\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusDrop = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusDrop} className=\"fas fa-times\" title=\"Drop\"></i>\n                           </div>\n                        </div>\n                     );\n                  } else if (obj.statusRetrieve && !obj.statusDone) {\n                     return (\n                        <div key={obj.id} className=\"toDo\">\n                           <div className=\"left tick\">\n                              <i onClick={(e) => {\n                                 e.target.value = true;\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusDone = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusDone} className=\"fas fa-check\" title=\"Done\"></i>\n                           </div>\n                           <div className=\"top\">\n                              <p>{obj.text}</p>\n                           </div>\n                           <div className=\"bottom\">\n                              <p>{obj.toDoTime}</p>\n                           </div>\n                           <div className=\"right close\">\n                              <i onClick={(e) => {\n\n                                 e.target.value = true;\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusDrop = e.target.value;\n                                       obj.statusRetrieve = !e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusDrop} className=\"fas fa-times\" title=\"Drop\"></i>\n                           </div>\n                        </div>\n                     );\n                  }\n               })\n            }\n         </div>\n\n         <div className=\"container dropped\">\n            <h3>Dropped</h3>\n            {\n               toDos && toDos.map((obj) => {\n                  if (obj.statusDrop && !obj.statusRetrieve && !obj.statusRemove) {\n                     return (\n                        <div key={obj.id} className=\"toDo\">\n                           <div className=\"left recycle\">\n                              <i onClick={(e) => {\n                                 let isdelete = window.confirm(\"Retrieving dropped ToDo\");\n                                 if (isdelete) {\n                                    e.target.value = true;\n                                 }\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusRetrieve = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusRetrieve} className=\"fas fa-redo-alt\" title=\"Retrieve\"></i>\n                           </div>\n                           <div className=\"top\">\n                              <p className=\"textCross\">{obj.text}</p>\n                           </div>\n                           <div className=\"bottom\">\n                              <p>{obj.toDoTime}</p>\n                           </div>\n                           <div className=\"right bin\">\n                              <i onClick={(e) => {\n                                 let isdelete = window.confirm(\"Deleting ToDo permanently !\");\n                                 if (isdelete) {\n                                    e.target.value = true;\n                                 }\n                                 setToDos(toDos.filter((obj2) => {\n                                    if (obj2.id === obj.id) {\n                                       obj2.statusRemove = e.target.value;\n                                    }\n                                    return obj2;\n                                 }));\n                              }} value={obj.statusRemove} className=\"fas fa-trash-alt\" title=\"Remove\"></i>\n                           </div>\n                        </div>\n                     );\n                  }\n               })\n            }\n         </div>\n\n      </div>\n   );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n);"],"sourceRoot":""}